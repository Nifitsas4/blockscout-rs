//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.6

use super::sea_orm_active_enums::PublicTagType;
use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "public_tags")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    pub created_at: DateTime,
    pub created_by: String,
    pub modified_at: DateTime,
    pub modified_by: String,
    pub source: String,
    pub slug: String,
    pub name: String,
    pub tag_type: PublicTagType,
    pub ordinal: i32,
    pub reputation_impact: Option<i32>,
    #[sea_orm(column_type = "JsonBinary")]
    pub meta: Json,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::address_public_tags::Entity")]
    AddressPublicTags,
}

impl Related<super::address_public_tags::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::AddressPublicTags.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
